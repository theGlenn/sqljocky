{"dependencies":[{"id":"dart.core","uri":"dart-sdk/lib/core/core.dart","name":"dart:core","children":[{"id":"Object","comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","comment":"\nReturns a string representation of this object.\n","name":"toString","line":"48","kind":"method"},{"id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"id":"invocation","name":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","line":"65","kind":"property"},{"id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"id":"utils","uri":"file:///home/james/devroot/sqljocky/lib/utils.dart","children":[{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"QueryRunner","comment":"\nRuns a list of arbitrary queries. Currently only handles update\nqueries as the results are ignored.\n","uri":"file:///home/james/devroot/sqljocky/lib/src/utils.dart","name":"QueryRunner","children":[{"returnType":{"refId":"dart.async/Future","name":"Future"},"id":"_executeQueries1()","name":"_executeQueries","isPrivate":true,"children":[{"ref":{"refId":"dart.async/Completer","name":"Completer"},"id":"c","name":"c","kind":"param"}],"line":"68","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"id":"executeQueries0()","comment":"\nExecutes the queries this [QueryRunner] was created with. The\nreturned [Future] completes when all the queries have been executed.\nResults are ignored.\n\nDo not run this a second time until the future has completed.\n","name":"executeQueries","line":"86","kind":"method"},{"ref":{"refId":"sqljocky/ConnectionPool","name":"ConnectionPool"},"isFinal":true,"id":"pool","name":"pool","line":"58","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"isFinal":true,"id":"queries","name":"queries","line":"59","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"isFinal":true,"id":"_queries","name":"_queries","isPrivate":true,"line":"60","kind":"variable"},{"id":"2()","comment":"\nCreate a [QueryRunner]. Needs a [pool] and\na list of [queries]. \n","name":"","children":[{"initializedField":{"refId":"utils/QueryRunner/pool","name":"pool"},"ref":{"refId":"sqljocky/ConnectionPool","name":"ConnectionPool"},"id":"pool","name":"pool","kind":"param"},{"initializedField":{"refId":"utils/QueryRunner/queries","name":"queries"},"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"id":"queries","name":"queries","kind":"param"}],"line":"66","kind":"constructor"}],"line":"57","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"TableDropper","comment":"\nDrops a set of tables.\n","uri":"file:///home/james/devroot/sqljocky/lib/src/utils.dart","name":"TableDropper","children":[{"returnType":{"refId":"void","name":"void"},"id":"_dropTables1()","name":"_dropTables","isPrivate":true,"children":[{"ref":{"refId":"dart.async/Completer","name":"Completer"},"id":"c","name":"c","kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"id":"dropTables0()","comment":"\nDrops the tables this [TableDropper] was created with. The \nreturned [Future] completes when all the tables have been dropped.\nIf a table doesn't exist, it is ignored.\n\nDo not run this a second time until the future has completed.\n","name":"dropTables","line":"44","kind":"method"},{"ref":{"refId":"sqljocky/ConnectionPool","name":"ConnectionPool"},"id":"pool","name":"pool","line":"7","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"id":"tables","name":"tables","line":"8","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"id":"_tables","name":"_tables","isPrivate":true,"line":"9","kind":"variable"},{"id":"2()","comment":"\nCreate a [TableDropper]. Needs a [pool] and\na list of [tables].\n","name":"","children":[{"initializedField":{"refId":"utils/TableDropper/pool","name":"pool"},"ref":{"refId":"sqljocky/ConnectionPool","name":"ConnectionPool"},"id":"pool","name":"pool","kind":"param"},{"initializedField":{"refId":"utils/TableDropper/tables","name":"tables"},"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"id":"tables","name":"tables","kind":"param"}],"line":"15","kind":"constructor"}],"line":"6","kind":"class"}],"line":"1","kind":"library"}
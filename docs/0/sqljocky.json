{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/List/E","name":"E"}],"name":"Iterable"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA [List] is an indexable collection with a length.\n\nA `List` implementation can choose not to support all methods\nof the `List` interface.\n\nThe most common list types are:\n* Fixed length list. It is an error to use operations that can change\n  the list's length.\n* Growable list. Full implementation of the interface.\n* Unmodifiable list. It is an error to use operations that can change\n  the list's length, or that can change the values of the list.\n  If an unmodifable list is backed by another modifiable data structure,\n  the values read from it may still change over time.\n\nExample:\n\n   var fixedLengthList = new List(5);\n   fixedLengthList.length = 0;  // throws.\n   fixedLengthList.add(499);  // throws\n   fixedLengthList[0] = 87;\n   var growableList = [1, 2];\n   growableList.length = 0;\n   growableList.add(499);\n   growableList[0] = 87;\n   var unmodifiableList = const [1, 2];\n   unmodifiableList.length = 0;  // throws.\n   unmodifiableList.add(499);  // throws\n   unmodifiableList[0] = 87;  // throws.\n\nLists are [Iterable].\nList iteration iterates over values in index order.\nChanging the values will not affect iteration,\nbut changing the valid indices -\nthat is, changing the list's length -\nbetween iteration steps\nwill cause a [ConcurrentModificationError].\nThis means that only growable lists can throw [ConcurrentModificationError].\nIf the length changes temporarily\nand is restored before continuing the iteration,\nthe iterator will not detect it.\n","uri":"dart-sdk/lib/core/list.dart","name":"List","id":"List","children":[{"returnType":{"refId":"dart.core/List/E","name":"E"},"isOperator":true,"comment":"\nReturns the element at the given [index] in the list or throws\nan [RangeError] if [index] is out of bounds.\n","name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isOperator":true,"comment":"\nSets the entry at the given [index] in the list to [value].\nThrows an [RangeError] if [index] is out of bounds.\n","name":"[]=","id":"[]=2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/List/E","name":"E"},"name":"value","id":"value","kind":"param"}],"line":"123","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nChanges the length of the list. If [newLength] is greater than\nthe current [length], entries are initialized to [:null:]. Throws\nan [UnsupportedError] if the list is not extendable.\n","name":"length=","id":"length=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"newLength","id":"newLength","kind":"param"}],"line":"137","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds [value] at the end of the list, extending the length by\none. Throws an [UnsupportedError] if the list is not\nextendable.\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart.core/List/E","name":"E"},"name":"value","id":"value","kind":"param"}],"line":"144","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAppends all elements of the [iterable] to the end of this list.\nExtends the length of the list by the number of elements in [iterable].\nThrows an [UnsupportedError] if this list is not extensible.\n","name":"addAll","id":"addAll1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/List/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"}],"line":"151","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSorts the list according to the order specified by the [compare] function.\n\nThe [compare] function must act as a [Comparator].\nThe default [List] implementations use [Comparable.compare] if\n[compare] is omitted.\n","name":"sort","id":"sort1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"compare","id":"compare","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/List/E","name":"E"},"uri":"dart-sdk/lib/core/list.dart","name":"a","id":"a","line":"165","kind":"param"},{"ref":{"refId":"dart.core/List/E","name":"E"},"uri":"dart-sdk/lib/core/list.dart","name":"b","id":"b","line":"165","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"165","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the first index of [element] in the list.\n\nSearches the list from index [start] to the length of the list.\nThe first time an element [:e:] is encountered so that [:e == element:],\nthe index of [:e:] is returned.\nReturns -1 if [element] is not found.\n","name":"indexOf","id":"indexOf2()","children":[{"ref":{"refId":"dart.core/List/E","name":"E"},"name":"element","id":"element","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"0","name":"start","id":"start","kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the last index of [element] in the list.\n\nSearches the list backwards from index [start] (inclusive) to 0.\nThe first time an element [:e:] is encountered so that [:e == element:],\nthe index of [:e:] is returned.\nIf start is not provided, it defaults to [:this.length - 1:] .\nReturns -1 if [element] is not found.\n","name":"lastIndexOf","id":"lastIndexOf2()","children":[{"ref":{"refId":"dart.core/List/E","name":"E"},"name":"element","id":"element","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"start","id":"start","kind":"param"}],"line":"186","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves all elements in the list.\n\nThe length of the list becomes zero.\nThrows an [UnsupportedError], and retains all elements, if the\nlength of the list cannot be changed.\n","name":"clear","id":"clear0()","line":"195","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts the element at position [index] in the list.\n\nThis increases the length of the list by one and shifts all elements\nat or after the index towards the end of the list.\n\nIt is an error if the [index] does not point inside the list or at the\nposition after the last element.\n","name":"insert","id":"insert2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/List/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"206","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nInserts all elements of [iterable] at position [index] in the list.\n\nThis increases the length of the list by the length of [iterable] and\nshifts all later elements towards the end of the list.\n\nIt is an error if the [index] does not point inside the list or at the\nposition after the last element.\n","name":"insertAll","id":"insertAll2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/List/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"}],"line":"217","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nOverwrites elements of `this` with the elemenst of [iterable] starting\nat position [index] in the list.\n\nThis operation does not increase the length of the list.\n\nIt is an error if the [index] does not point inside the list or at the\nposition after the last element.\n\nIt is an error if the [iterable] is longer than [length] - [index].\n","name":"setAll","id":"setAll2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/List/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"}],"line":"230","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nRemoves [value] from the list. Returns true if [value] was\nin the list. Returns false otherwise. The method has no effect\nif [value] value was not in the list.\n","name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"value","id":"value","kind":"param"}],"line":"237","kind":"method"},{"returnType":{"refId":"dart.core/List/E","name":"E"},"comment":"\nRemoves the element at position [index] from the list.\n\nThis reduces the length of the list by one and moves all later elements\ndown by one position.\nReturns the removed element.\nThrows an [ArgumentError] if [index] is not an [int].\nThrows an [RangeError] if the [index] does not point inside\nthe list.\nThrows an [UnsupportedError], and doesn't remove the element,\nif the length of the list cannot be changed.\n","name":"removeAt","id":"removeAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"251","kind":"method"},{"returnType":{"refId":"dart.core/List/E","name":"E"},"comment":"\nPops and returns the last element of the list.\nThrows a [UnsupportedError] if the length of the\nlist cannot be changed.\n","name":"removeLast","id":"removeLast0()","line":"258","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves all elements of this list that satisfy [test].\n\nAn elements [:e:] satisfies [test] if [:test(e):] is true.\n","name":"removeWhere","id":"removeWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/List/E","name":"E"},"uri":"dart-sdk/lib/core/list.dart","name":"element","id":"element","line":"265","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"265","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves all elements of this list that fail to satisfy [test].\n\nAn elements [:e:] satisfies [test] if [:test(e):] is true.\n","name":"retainWhere","id":"retainWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/List/E","name":"E"},"uri":"dart-sdk/lib/core/list.dart","name":"element","id":"element","line":"272","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"272","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List/E","name":"E"}],"name":"List"},"comment":"\nReturns a new list containing the elements from [start] to [end].\n\nIf [end] is omitted, the [length] of the list is used.\n\nIt is an error if [start] or [end] are not list indices for this list,\nor if [end] is before [start].\n","name":"sublist","id":"sublist2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"end","id":"end","kind":"param"}],"line":"282","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/List/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] that iterators over the elements in the range\n[start] to [end] exclusive. The result of this function\nis backed by `this`.\n\nIt is an error if [end] is before [start].\n\nIt is an error if the [start] and [end] are not valid ranges at the time\nof the call to this method. The returned [Iterable] behaves similar to\n`skip(start).take(end - start)`. That is, it will not throw exceptions\nif `this` changes size.\n\nExample:\n\n    var list = [1, 2, 3, 4, 5];\n    var range = list.getRange(1, 4);\n    print(range.join(', '));  // => 2, 3, 4\n    list.length = 3;\n    print(range.join(', '));  // => 2, 3\n","name":"getRange","id":"getRange2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"}],"line":"304","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCopies the elements of [iterable], skipping the [skipCount] first elements\ninto the range [start] to [end] exclusive of `this`.\n\nIf [start] equals [end] and represent a legal range, this method has\nno effect.\n\nIt is an error if [start]..[end] is not a valid range pointing into the\n`this`.\n\nIt is an error if the [iterable] does not have enough elements after\nskipping [skipCount] elements.\n","name":"setRange","id":"setRange4()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/List/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"0","name":"skipCount","id":"skipCount","kind":"param"}],"line":"319","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves the elements in the range [start] to [end] exclusive.\n\nIt is an error if [start]..[end] is not a valid range pointing into the\n`this`.\n","name":"removeRange","id":"removeRange2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"}],"line":"327","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the elements in the range [start] to [end] exclusive to the given\n[fillValue].\n\nIt is an error if [start]..[end] is not a valid range pointing into the\n`this`.\n","name":"fillRange","id":"fillRange3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"},{"ref":{"refId":"dart.core/List/E","name":"E"},"isOptional":true,"name":"fillValue","id":"fillValue","kind":"param"}],"line":"336","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRemoves the elements in the range [start] to [end] exclusive and replaces\nthem with the contents of the [iterable].\n\nIt is an error if [start]..[end] is not a valid range pointing into the\n`this`.\n\nExample:\n\n    var list = [1, 2, 3, 4, 5];\n    list.replaceRange(1, 3, [6, 7, 8, 9]);\n    print(list);  // [1, 6, 7, 8, 9, 4, 5]\n","name":"replaceRange","id":"replaceRange3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/List/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"}],"line":"351","kind":"method"},{"returnType":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/int","name":"int"},{"refId":"dart.core/List/E","name":"E"}],"name":"Map"},"comment":"\nReturns an unmodifiable [Map] view of `this`.\n\nIt has the indices of this list as keys, and the corresponding elements\nas values.\n","name":"asMap","id":"asMap0()","line":"359","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the number of elements in the list.\n\nThe valid indices for a list are 0 through `length - 1`.\n","name":"length","id":"length","line":"130","kind":"property"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/List/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] of the elements of this [List] in reverse order.\n","name":"reversed","id":"reversed","line":"156","kind":"property"},{"comment":"\nCreates a list of the given [length].\n\nThe list is a fixed-length list if [length] is provided, and an empty\ngrowable list if [length] is omitted.\n\nIt is an error if [length] is not a non-negative integer.\n","name":"List","id":"List1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"length","id":"length","kind":"param"}],"line":"58","kind":"constructor"},{"comment":"\nCreates a fixed-length list of the given [length] where each entry\ncontains [fill].\n","name":"List.filled","id":"List.filled2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","kind":"param"},{"ref":{"refId":"dart.core/List/E","name":"E"},"name":"fill","id":"fill","kind":"param"}],"line":"64","kind":"constructor"},{"comment":"\nCreates an list with the elements of [other].\n\nThe order in the list will be\nthe order provided by the iterator of [other].\n\nThe returned list is growable if [growable] is true, otherwise it's\na fixed length list.\n","name":"List.from","id":"List.from2()","children":[{"ref":{"refId":"dart.core/Iterable","name":"Iterable"},"name":"other","id":"other","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"growable","id":"growable","kind":"param"}],"line":"75","kind":"constructor"},{"comment":"\nGenerate a `List` of values.\n\nCreates a list with [length] positions\nand fills them by values created by calling [generator]\nfor each index in the range `0` .. `[length] - 1`\nin increasing order.\n\nThe created length's length is fixed unless [growable] is true.\n","name":"List.generate","id":"List.generate3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"generator","id":"generator","children":[{"returnType":{"refId":"dart.core/List/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/int","name":"int"},"uri":"dart-sdk/lib/core/list.dart","name":"index","id":"index","line":"99","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"growable","id":"growable","line":"100","kind":"param"}],"line":"99","kind":"constructor"},{"name":"E","id":"E","kind":"typeparam"}],"line":"49","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe [Iterable] interface allows to get an [Iterator] out of an\n[Iterable] object.\n\nThis interface is used by the for-in construct to iterate over an\n[Iterable] object.\nThe for-in construct takes an [Iterable] object at the right-hand\nside, and calls its [iterator] method to get an [Iterator] on it.\n\nA user-defined class that implements the [Iterable] interface can\nbe used as the right-hand side of a for-in construct.\n","uri":"dart-sdk/lib/core/iterable.dart","name":"Iterable","id":"Iterable","children":[{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"comment":"\nReturns a lazy [Iterable] where each element [:e:] of [this] is replaced\nby the result of [:f(e):].\n\nThis method returns a view of the mapped elements. As long as the\nreturned [Iterable] is not iterated over, the supplied function [f] will\nnot be invoked. The transformed elements will not be cached. Iterating\nmultiple times over the the returned [Iterable] will invoke the supplied\nfunction [f] multiple times on the same element.\n","name":"map","id":"map1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"51","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns a lazy [Iterable] with all elements that satisfy the\npredicate [f].\n\nThis method returns a view of the mapped elements. As long as the\nreturned [Iterable] is not iterated over, the supplied function [f] will\nnot be invoked. Iterating will not cache results, and thus iterating\nmultiple times over the the returned [Iterable] will invoke the supplied\nfunction [f] multiple times on the same element.\n","name":"where","id":"where1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"63","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"63","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"comment":"\nExpand each element of this [Iterable] into zero or more elements.\n\nThe resulting Iterable will run through the elements returned\nby [f] for each element of this, in order.\n\nThe returned [Iterable] is lazy, and will call [f] for each element\nof this every time it's iterated.\n","name":"expand","id":"expand1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"74","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"74","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nCheck whether the collection contains an element equal to [element].\n","name":"contains","id":"contains1()","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"79","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nApplies the function [f] to each element of this collection.\n","name":"forEach","id":"forEach1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"84","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"84","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReduces a collection to a single value by iteratively combining elements\nof the collection using the provided function.\n\nExample of calculating the sum of an iterable:\n\n    iterable.reduce((value, element) => value + element);\n\n","name":"reduce","id":"reduce1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"95","kind":"param"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"95","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"95","kind":"method"},{"comment":"\nReduces a collection to a single value by iteratively combining each\nelement of the collection with an existing value using the provided\nfunction.\n\nUse [initialValue] as the initial value, and the function [combine] to\ncreate a new value from the previous one and an element.\n\nExample of calculating the sum of an iterable:\n\n    iterable.fold(0, (prev, element) => prev + element);\n\n","name":"fold","id":"fold2()","children":[{"name":"initialValue","id":"initialValue","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/core/iterable.dart","name":"previousValue","id":"previousValue","line":"111","kind":"param"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"111","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"111","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if every elements of this collection satisify the\npredicate [f]. Returns false otherwise.\n","name":"every","id":"every1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"117","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"117","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nConverts each element to a [String] and concatenates the strings.\n\nConverts each element to a [String] by calling [Object.toString] on it.\nThen concatenates the strings, optionally separated by the [separator]\nstring.\n","name":"join","id":"join1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"\"\"","name":"separator","id":"separator","kind":"param"}],"line":"126","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if one element of this collection satisfies the\npredicate [f]. Returns false otherwise.\n","name":"any","id":"any1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"element","id":"element","line":"136","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"136","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"List"},"comment":"\nCreates a [List] containing the elements of this [Iterable].\n\nThe elements will be in iteration order. The list is fixed-length\nif [growable] is false.\n","name":"toList","id":"toList1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"growable","id":"growable","kind":"param"}],"line":"144","kind":"method"},{"returnType":{"refId":"dart.core/Set","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Set"},"comment":"\nCreates a [Set] containing the elements of this [Iterable].\n","name":"toSet","id":"toSet0()","line":"149","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] with at most [n] elements.\n\nThe returned [Iterable] may contain fewer than [n] elements, if [this]\ncontains fewer than [n] elements.\n","name":"take","id":"take1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","kind":"param"}],"line":"170","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] that stops once [test] is not satisfied anymore.\n\nThe filtering happens lazily. Every new [Iterator] of the returned\n[Iterable] will start iterating over the elements of [this].\nWhen the iterator encounters an element [:e:] that does not satisfy [test],\nit discards [:e:] and moves into the finished state. That is, it will not\nask or provide any more elements.\n","name":"takeWhile","id":"takeWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"181","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"181","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] that skips the first [n] elements.\n\nIf [this] has fewer than [n] elements, then the resulting [Iterable] will\nbe empty.\n","name":"skip","id":"skip1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"n","id":"n","kind":"param"}],"line":"189","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterable"},"comment":"\nReturns an [Iterable] that skips elements while [test] is satisfied.\n\nThe filtering happens lazily. Every new [Iterator] of the returned\n[Iterable] will iterate over all elements of [this].\nAs long as the iterator's elements do not satisfy [test] they are\ndiscarded. Once an element satisfies the [test] the iterator stops testing\nand uses every element unconditionally.\n","name":"skipWhile","id":"skipWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"200","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"200","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the first element that satisfies the given predicate [f].\n\nIf none matches, the result of invoking the [orElse] function is\nreturned. By default, when [orElse] is `null`, a [StateError] is\nthrown.\n","name":"firstWhere","id":"firstWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"231","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"231","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the last element that satisfies the given predicate [f].\n\nIf none matches, the result of invoking the [orElse] function is\nreturned. By default, when [orElse] is [:null:], a [StateError] is\nthrown.\n","name":"lastWhere","id":"lastWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"240","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"240","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the single element that satisfies [f]. If no or more than one\nelement match then a [StateError] is thrown.\n","name":"singleWhere","id":"singleWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/iterable.dart","name":"value","id":"value","line":"246","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"246","kind":"method"},{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the [index]th element.\n\nIf [this] [Iterable] has fewer than [index] elements throws a\n[RangeError].\n\nNote: if [this] does not have a deterministic iteration order then the\nfunction may simply return any element without any iteration if there are\nat least [index] elements in [this].\n","name":"elementAt","id":"elementAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"258","kind":"method"},{"ref":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart.core/Iterable/E","name":"E"}],"name":"Iterator"},"comment":"\nReturns an [Iterator] that iterates over this [Iterable] object.\n","name":"iterator","id":"iterator","line":"39","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the number of elements in [this].\n\nCounting all elements may be involve running through all elements and can\ntherefore be slow.\n","name":"length","id":"length","line":"157","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if there is no element in this collection.\n","name":"isEmpty","id":"isEmpty","line":"162","kind":"property"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the first element.\n\nIf [this] is empty throws a [StateError]. Otherwise this method is\nequivalent to [:this.elementAt(0):]\n","name":"first","id":"first","line":"208","kind":"property"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the last element.\n\nIf [this] is empty throws a [StateError].\n","name":"last","id":"last","line":"215","kind":"property"},{"ref":{"refId":"dart.core/Iterable/E","name":"E"},"comment":"\nReturns the single element in [this].\n\nIf [this] is empty or has more than one element throws a [StateError].\n","name":"single","id":"single","line":"222","kind":"property"},{"name":"Iterable","id":"Iterable0()","line":"20","kind":"constructor"},{"comment":"\nCreate an [Iterable] that generates its elements dynamically.\n\nThe [Iterators] created by the [Iterable] will count from\nzero to [:count - 1:] while iterating, and call [generator]\nwith that index to create the next value.\n\nAs an [Iterable], [:new Iterable.generate(n, generator)):] is equivalent to\n[:const [0, ..., n - 1].map(generator):]\n","name":"Iterable.generate","id":"Iterable.generate2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"generator","id":"generator","children":[{"returnType":{"refId":"dart.core/Iterable/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/int","name":"int"},"uri":"dart-sdk/lib/core/iterable.dart","name":"index","id":"index","line":"32","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"32","kind":"constructor"},{"name":"E","id":"E","kind":"typeparam"}],"line":"19","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"comment":"\nA marker interface implemented by all core library exceptions.\n\nAn [Exception] is intended to convey information to the user about a failure,\nso that the error can be addressed programmatically. It is intended to be\ncaught, and it should contain useful data fields.\n\nCreating instances of [Exception] directly with [:new Exception(\"message\"):]\nis discouraged, and only included as a temporary measure during development,\nuntil the actual exceptions used by a library are done.\n","uri":"dart-sdk/lib/core/exceptions.dart","name":"Exception","id":"Exception","children":[{"name":"Exception","id":"Exception1()","children":[{"isOptional":true,"name":"message","id":"message","kind":"param"}],"line":"21","kind":"constructor"}],"line":"20","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"uri":"dart-sdk/lib/core/errors.dart","name":"Error","id":"Error","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nSafely convert a value to a [String] description.\n\nThe conversion is guaranteed to not throw, so it won't use the object's\ntoString method.\n","name":"safeToString","id":"safeToString1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"object","id":"object","kind":"param"}],"line":"16","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_objectToString","isPrivate":true,"id":"_objectToString1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"object","id":"object","kind":"param"}],"line":"34","kind":"method"},{"name":"Error","id":"Error0()","line":"8","kind":"constructor"}],"line":"7","kind":"class"}],"line":"5","kind":"library"},{"uri":"dart-sdk/lib/async/async.dart","name":"dart:async","id":"dart.async","children":[{"isAbstract":true,"interfaces":[{"refId":"dart.async/StreamTransformer","arguments":[{"refId":"dart.async/StreamEventTransformer/S","name":"S"},{"refId":"dart.async/StreamEventTransformer/T","name":"T"}],"name":"StreamTransformer"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nBase class for transformers that modifies stream events.\n\nA [StreamEventTransformer] transforms incoming Stream\nevents of one kind into outgoing events of (possibly) another kind.\n\nSubscribing on the stream returned by [bind] is the same as subscribing on\nthe source stream, except that events are passed through the [transformer]\nbefore being emitted. The transformer may generate any number and\ntypes of events for each incoming event. Pauses on the returned\nsubscription are forwarded to this stream.\n\nAn example that duplicates all data events:\n\n    class DoubleTransformer<T> extends StreamEventTransformerBase<T, T> {\n      void handleData(T data, EventSink<T> sink) {\n        sink.add(value);\n        sink.add(value);\n      }\n    }\n    someTypeStream.transform(new DoubleTransformer<Type>());\n\nThe default implementations of the \"handle\" methods forward\nthe events unmodified. If using the default [handleData] the generic type [T]\nneeds to be assignable to [S].\n","uri":"dart-sdk/lib/async/stream.dart","name":"StreamEventTransformer","id":"StreamEventTransformer","children":[{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamEventTransformer/T","name":"T"}],"name":"Stream"},"name":"bind","id":"bind1()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamEventTransformer/S","name":"S"}],"name":"Stream"},"name":"source","id":"source","kind":"param"}],"line":"1037","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAct on incoming data event.\n\nThe method may generate any number of events on the sink, but should\nnot throw.\n","name":"handleData","id":"handleData2()","children":[{"ref":{"refId":"dart.async/StreamEventTransformer/S","name":"S"},"name":"event","id":"event","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamEventTransformer/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"1062","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAct on incoming error event.\n\nThe method may generate any number of events on the sink, but should\nnot throw.\n","name":"handleError","id":"handleError2()","children":[{"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamEventTransformer/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"1073","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAct on incoming done event.\n\nThe method may generate any number of events on the sink, but should\nnot throw.\n","name":"handleDone","id":"handleDone1()","children":[{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamEventTransformer/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"1083","kind":"method"},{"name":"StreamEventTransformer","id":"StreamEventTransformer0()","line":"1035","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"1034","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe target of a [Stream.transform] call.\n\nThe [Stream.transform] call will pass itself to this object and then return\nthe resulting stream.\n","uri":"dart-sdk/lib/async/stream.dart","name":"StreamTransformer","id":"StreamTransformer","children":[{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamTransformer/T","name":"T"}],"name":"Stream"},"name":"bind","id":"bind1()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamTransformer/S","name":"S"}],"name":"Stream"},"name":"stream","id":"stream","kind":"param"}],"line":"1004","kind":"method"},{"comment":"\nCreate a [StreamTransformer] that delegates events to the given functions.\n\nThis is actually a [StreamEventTransformer] where the event handling is\nperformed by the function arguments.\nIf an argument is omitted, it acts as the corresponding default method from\n[StreamEventTransformer].\n\nExample use:\n\n    stringStream.transform(new StreamTransformer<String, String>(\n        handleData: (Strung value, EventSink<String> sink) {\n          sink.add(value);\n          sink.add(value);  // Duplicate the incoming events.\n        }));\n\n","name":"StreamTransformer","id":"StreamTransformer3()","children":[{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"handleData","id":"handleData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/StreamTransformer/S","name":"S"},"uri":"dart-sdk/lib/async/stream.dart","name":"data","id":"data","line":"996","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamTransformer/T","name":"T"}],"name":"EventSink"},"uri":"dart-sdk/lib/async/stream.dart","name":"sink","id":"sink","line":"996","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"996","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"handleError","id":"handleError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream.dart","name":"error","id":"error","line":"997","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamTransformer/T","name":"T"}],"name":"EventSink"},"uri":"dart-sdk/lib/async/stream.dart","name":"sink","id":"sink","line":"997","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"997","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"handleDone","id":"handleDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamTransformer/T","name":"T"}],"name":"EventSink"},"uri":"dart-sdk/lib/async/stream.dart","name":"sink","id":"sink","line":"998","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"998","kind":"param"}],"line":"995","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"977","kind":"class"}],"line":"5","kind":"library"},{"uri":"dart-sdk/lib/collection/collection.dart","name":"dart:collection","id":"dart.collection","children":[{"isAbstract":true,"interfaces":[{"refId":"dart.core/List","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"List"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nBase implementation of a [List] class.\n\nThis class can be used as a mixin.\n\nThis implements all read operations using only the `length` and\n`operator[]` members. It implements write operations using those and\n`length=` and `operator[]=`\n\nA fixed-length list should mix this class in, and the [FixedLengthListMixin]\nas well, in that order, to overwrite the methods that modify the length.\n\nAn unmodifiable list should mix [UnmodifiableListMixin] on top of this\nmixin to prevent all modifications.\n","uri":"dart-sdk/lib/collection/list.dart","name":"ListMixin","id":"ListMixin","children":[{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"elementAt","id":"elementAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"forEach","id":"forEach1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"action","id":"action","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"36","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"36","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"contains","id":"contains1()","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"64","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"every","id":"every1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"75","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"75","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"any","id":"any1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"86","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"86","kind":"method"},{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"firstWhere","id":"firstWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"97","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"97","kind":"method"},{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"lastWhere","id":"lastWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"110","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"singleWhere","id":"singleWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"123","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"123","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"join","id":"join1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"\"\"","name":"separator","id":"separator","kind":"param"}],"line":"144","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"where","id":"where1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"173","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"173","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"name":"map","id":"map1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"175","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"name":"expand","id":"expand1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"177","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"177","kind":"method"},{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"reduce","id":"reduce1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"previousValue","id":"previousValue","line":"180","kind":"param"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"180","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"180","kind":"method"},{"name":"fold","id":"fold2()","children":[{"name":"initialValue","id":"initialValue","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/collection/list.dart","name":"previousValue","id":"previousValue","line":"189","kind":"param"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"189","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"189","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"skip","id":"skip1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"}],"line":"201","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"skipWhile","id":"skipWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"203","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"203","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"take","id":"take1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"}],"line":"207","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"takeWhile","id":"takeWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"209","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"209","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"List"},"name":"toList","id":"toList1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"growable","id":"growable","kind":"param"}],"line":"213","kind":"method"},{"returnType":{"refId":"dart.core/Set","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Set"},"name":"toSet","id":"toSet0()","line":"226","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"235","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"addAll","id":"addAll1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"}],"line":"239","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"element","id":"element","kind":"param"}],"line":"245","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeWhere","id":"removeWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"256","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"256","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"retainWhere","id":"retainWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"260","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"260","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"_filter","isPrivate":true,"id":"_filter3()","children":[{"ref":{"refId":"dart.core/List","name":"List"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"265","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"265","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"retainMatching","id":"retainMatching","line":"266","kind":"param"}],"line":"264","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"284","kind":"method"},{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"removeLast","id":"removeLast0()","line":"288","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"sort","id":"sort1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"compare","id":"compare","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"a","id":"a","line":"297","kind":"param"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"b","id":"b","line":"297","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"297","kind":"method"},{"returnType":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/int","name":"int"},{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Map"},"name":"asMap","id":"asMap0()","line":"305","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_rangeCheck","isPrivate":true,"id":"_rangeCheck2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"}],"line":"309","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"List"},"name":"sublist","id":"sublist2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"end","id":"end","kind":"param"}],"line":"318","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"getRange","id":"getRange2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"}],"line":"329","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeRange","id":"removeRange2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"}],"line":"334","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"fillRange","id":"fillRange3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"isOptional":true,"name":"fill","id":"fill","kind":"param"}],"line":"341","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setRange","id":"setRange4()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"0","name":"skipCount","id":"skipCount","kind":"param"}],"line":"348","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"replaceRange","id":"replaceRange3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"newContents","id":"newContents","kind":"param"}],"line":"380","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"indexOf","id":"indexOf2()","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"element","id":"element","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"0","name":"startIndex","id":"startIndex","kind":"param"}],"line":"386","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the last index in the list [a] of the given [element], starting\nthe search at index [startIndex] to 0.\nReturns -1 if [element] is not found.\n","name":"lastIndexOf","id":"lastIndexOf2()","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"element","id":"element","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"startIndex","id":"startIndex","kind":"param"}],"line":"406","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insert","id":"insert2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"425","kind":"method"},{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"removeAt","id":"removeAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"442","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertAll","id":"insertAll2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"}],"line":"449","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAll","id":"setAll2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"}],"line":"466","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"478","kind":"method"},{"ref":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterator"},"name":"iterator","id":"iterator","line":"32","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isEmpty","id":"isEmpty","line":"46","kind":"property"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"first","id":"first","line":"48","kind":"property"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"last","id":"last","line":"53","kind":"property"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"single","id":"single","line":"58","kind":"property"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"reversed","id":"reversed","line":"476","kind":"property"},{"name":"E","id":"E","kind":"typeparam"}],"line":"30","kind":"class"},{"interfaces":[{"refId":"dart.collection/ListMixin","arguments":[{"refId":"dart.collection/ListBase/E","name":"E"}],"name":"ListMixin"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAbstract implementation of a list.\n\nAll operations are defined in terms of `length`, `operator[]`,\n`operator[]=` and `length=`, which need to be implemented.\n","uri":"dart-sdk/lib/collection/list.dart","name":"ListBase","id":"ListBase","children":[{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"elementAt","id":"elementAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"34","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"forEach","id":"forEach1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"action","id":"action","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"36","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"36","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"contains","id":"contains1()","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"64","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"every","id":"every1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"75","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"75","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"any","id":"any1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"86","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"86","kind":"method"},{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"firstWhere","id":"firstWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"97","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"97","kind":"method"},{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"lastWhere","id":"lastWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"110","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"orElse","id":"orElse","children":[{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"singleWhere","id":"singleWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"123","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"123","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"join","id":"join1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"\"\"","name":"separator","id":"separator","kind":"param"}],"line":"144","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"where","id":"where1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"173","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"173","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"name":"map","id":"map1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"175","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"name":"expand","id":"expand1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"177","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"177","kind":"method"},{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"reduce","id":"reduce1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"previousValue","id":"previousValue","line":"180","kind":"param"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"180","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"180","kind":"method"},{"name":"fold","id":"fold2()","children":[{"name":"initialValue","id":"initialValue","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/collection/list.dart","name":"previousValue","id":"previousValue","line":"189","kind":"param"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"189","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"189","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"skip","id":"skip1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"}],"line":"201","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"skipWhile","id":"skipWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"203","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"203","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"take","id":"take1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"}],"line":"207","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"takeWhile","id":"takeWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"209","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"209","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"List"},"name":"toList","id":"toList1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"growable","id":"growable","kind":"param"}],"line":"213","kind":"method"},{"returnType":{"refId":"dart.core/Set","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Set"},"name":"toSet","id":"toSet0()","line":"226","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"235","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"addAll","id":"addAll1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"}],"line":"239","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"element","id":"element","kind":"param"}],"line":"245","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeWhere","id":"removeWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"256","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"256","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"retainWhere","id":"retainWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"element","id":"element","line":"260","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"260","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"284","kind":"method"},{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"removeLast","id":"removeLast0()","line":"288","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"sort","id":"sort1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"compare","id":"compare","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"a","id":"a","line":"297","kind":"param"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"uri":"dart-sdk/lib/collection/list.dart","name":"b","id":"b","line":"297","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"297","kind":"method"},{"returnType":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/int","name":"int"},{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Map"},"name":"asMap","id":"asMap0()","line":"305","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_rangeCheck","isPrivate":true,"id":"_rangeCheck2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"}],"line":"309","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"List"},"name":"sublist","id":"sublist2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"end","id":"end","kind":"param"}],"line":"318","kind":"method"},{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"getRange","id":"getRange2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"}],"line":"329","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"removeRange","id":"removeRange2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"}],"line":"334","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"fillRange","id":"fillRange3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"isOptional":true,"name":"fill","id":"fill","kind":"param"}],"line":"341","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setRange","id":"setRange4()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"0","name":"skipCount","id":"skipCount","kind":"param"}],"line":"348","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"replaceRange","id":"replaceRange3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"start","id":"start","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"end","id":"end","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"newContents","id":"newContents","kind":"param"}],"line":"380","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"name":"indexOf","id":"indexOf2()","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"element","id":"element","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"0","name":"startIndex","id":"startIndex","kind":"param"}],"line":"386","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the last index in the list [a] of the given [element], starting\nthe search at index [startIndex] to 0.\nReturns -1 if [element] is not found.\n","name":"lastIndexOf","id":"lastIndexOf2()","children":[{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"element","id":"element","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"startIndex","id":"startIndex","kind":"param"}],"line":"406","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insert","id":"insert2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"element","id":"element","kind":"param"}],"line":"425","kind":"method"},{"returnType":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"removeAt","id":"removeAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"442","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"insertAll","id":"insertAll2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"}],"line":"449","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setAll","id":"setAll2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"iterable","id":"iterable","kind":"param"}],"line":"466","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"478","kind":"method"},{"ref":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterator"},"name":"iterator","id":"iterator","line":"32","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isEmpty","id":"isEmpty","line":"46","kind":"property"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"first","id":"first","line":"48","kind":"property"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"last","id":"last","line":"53","kind":"property"},{"ref":{"refId":"dart.collection/ListMixin/E","name":"E"},"name":"single","id":"single","line":"58","kind":"property"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.collection/ListMixin/E","name":"E"}],"name":"Iterable"},"name":"reversed","id":"reversed","line":"476","kind":"property"},{"name":"E","id":"E","kind":"typeparam"}],"line":"13","kind":"class"}],"line":"5","kind":"library"},{"comment":"\nresults is exported by sqljocky, so there is no need to\nseparately import this library.\n","uri":"file:///home/james/devroot/sqljocky/lib/src/results.dart","id":"results","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nHolds query results.\n","uri":"file:///home/james/devroot/sqljocky/lib/src/results/results.dart","name":"Results","id":"Results","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"results/Results","name":"Results"}],"name":"Future"},"comment":"\nIf this [Results] object contains a stream, converts the stream to a list\nand returns the new [Results] object in the future.\n","name":"toResultsList","id":"toResultsList0()","line":"39","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"results/Row","name":"Row"}],"name":"Stream"},"comment":"\nA [Stream] of [Row]s.\n","name":"stream","id":"stream","line":"10","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"results/Row","name":"Row"}],"name":"List"},"comment":"\nIn cases where it isn't possible to return the results in a stream, the results\nwill be in this [List] of [Row]s instead of the [stream]. (For example, Query.executeMulti).\nThe rows will also be found here in the [Results] return by [toResultsList]\n","name":"rows","id":"rows","line":"17","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe id of the inserted row, or [null] if no row was inserted.\n","name":"insertId","id":"insertId","line":"22","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe number of affected rows in an update statement, or\n[null] in other cases.\n","name":"affectedRows","id":"affectedRows","line":"28","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"results/Field","name":"Field"}],"name":"List"},"comment":"\nA list of the fields returned by the query.\n","name":"fields","id":"fields","line":"33","kind":"property"}],"line":"6","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.collection/ListBase","arguments":[],"name":"ListBase"},"comment":"\nA row of data.\n","uri":"file:///home/james/devroot/sqljocky/lib/src/results/row.dart","name":"Row","id":"Row","line":"6","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/james/devroot/sqljocky/lib/src/results/field.dart","name":"Field","id":"Field","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"catalog","id":"catalog","line":"5","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"db","id":"db","line":"6","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"table","id":"table","line":"7","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"orgTable","id":"orgTable","line":"8","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"9","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"orgName","id":"orgName","line":"10","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"characterSet","id":"characterSet","line":"11","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","line":"12","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"type","id":"type","line":"13","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"flags","id":"flags","line":"14","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"decimals","id":"decimals","line":"15","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"defaultValue","id":"defaultValue","line":"16","kind":"property"}],"line":"4","kind":"class"}],"line":"5","kind":"library"}],"uri":"file:///home/james/devroot/sqljocky/lib/sqljocky.dart","id":"sqljocky","children":[{"uri":"file:///home/james/devroot/sqljocky/lib/src/handlers/handler.dart","name":"_NO_RESULT","isPrivate":true,"id":"_NO_RESULT","line":"6","kind":"variable"},{"interfaces":[{"refId":"results/Field","name":"Field"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/james/devroot/sqljocky/lib/src/results/field_impl.dart","name":"_FieldImpl","isPrivate":true,"id":"_FieldImpl","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"51","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"catalog","id":"catalog","line":"17","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"db","id":"db","line":"18","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"table","id":"table","line":"19","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"orgTable","id":"orgTable","line":"20","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"21","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"orgName","id":"orgName","line":"22","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"characterSet","id":"characterSet","line":"23","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","line":"24","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"type","id":"type","line":"25","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"flags","id":"flags","line":"26","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"decimals","id":"decimals","line":"27","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"defaultValue","id":"defaultValue","line":"28","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_catalog","isPrivate":true,"id":"_catalog","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_db","isPrivate":true,"id":"_db","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_table","isPrivate":true,"id":"_table","line":"6","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_orgTable","isPrivate":true,"id":"_orgTable","line":"7","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_name","isPrivate":true,"id":"_name","line":"8","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_orgName","isPrivate":true,"id":"_orgName","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_characterSet","isPrivate":true,"id":"_characterSet","line":"10","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_length","isPrivate":true,"id":"_length","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_type","isPrivate":true,"id":"_type","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_flags","isPrivate":true,"id":"_flags","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_decimals","isPrivate":true,"id":"_decimals","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_defaultValue","isPrivate":true,"id":"_defaultValue","line":"15","kind":"variable"},{"name":"_FieldImpl._forTests","isPrivate":true,"id":"_FieldImpl._forTests1()","children":[{"initializedField":{"refId":"sqljocky/_FieldImpl/_type","name":"_type"},"ref":{"refId":"dart.core/int","name":"int"},"name":"_type","isPrivate":true,"id":"_type","kind":"param"}],"line":"30","kind":"constructor"},{"name":"_FieldImpl._","isPrivate":true,"id":"_FieldImpl._1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"buffer","id":"buffer","kind":"param"}],"line":"32","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.async/StreamEventTransformer","arguments":[{"refId":"results/Row","name":"Row"},{"refId":"results/Row","name":"Row"}],"name":"StreamEventTransformer"},"uri":"file:///home/james/devroot/sqljocky/lib/src/results/results_impl.dart","name":"_StreamDoneTransformer","isPrivate":true,"id":"_StreamDoneTransformer","children":[{"returnType":{"refId":"void","name":"void"},"name":"handleDone","id":"handleDone1()","children":[{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"results/Row","name":"Row"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"46","kind":"method"},{"name":"handler","id":"handler","line":"42","kind":"variable"},{"name":"_StreamDoneTransformer","id":"_StreamDoneTransformer1()","children":[{"initializedField":{"refId":"sqljocky/_StreamDoneTransformer/handler","name":"handler"},"name":"handler","id":"handler","kind":"param"}],"line":"44","kind":"constructor"}],"line":"41","kind":"class"},{"superclass":{"refId":"results/Results","name":"Results"},"uri":"file:///home/james/devroot/sqljocky/lib/src/results/results_impl.dart","name":"_ResultsImpl","isPrivate":true,"id":"_ResultsImpl","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"results/Results","name":"Results"}],"name":"Future"},"name":"toResultsList","id":"toResultsList0()","line":"34","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"results/Row","name":"Row"}],"name":"List"},"name":"rows","id":"rows","line":"13","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"results/Field","name":"Field"}],"name":"List"},"name":"fields","id":"fields","line":"14","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"results/Row","name":"Row"}],"name":"Stream"},"name":"stream","id":"stream","line":"15","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"insertId","id":"insertId","line":"6","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"affectedRows","id":"affectedRows","line":"7","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"results/Field","name":"Field"}],"name":"List"},"name":"_fields","isPrivate":true,"id":"_fields","line":"8","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"results/Row","name":"Row"}],"name":"List"},"name":"_rows","isPrivate":true,"id":"_rows","line":"9","kind":"variable"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"results/Row","name":"Row"}],"name":"Stream"},"name":"_stream","isPrivate":true,"id":"_stream","line":"10","kind":"variable"},{"ref":{"refId":"sqljocky/_OnDone","name":"_OnDone"},"name":"onDone","id":"onDone","line":"11","kind":"variable"},{"name":"_ResultsImpl","id":"_ResultsImpl5()","children":[{"initializedField":{"refId":"sqljocky/_ResultsImpl/insertId","name":"insertId"},"ref":{"refId":"dart.core/int","name":"int"},"name":"insertId","id":"insertId","kind":"param"},{"initializedField":{"refId":"sqljocky/_ResultsImpl/affectedRows","name":"affectedRows"},"ref":{"refId":"dart.core/int","name":"int"},"name":"affectedRows","id":"affectedRows","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"results/Field","name":"Field"}],"name":"List"},"name":"fields","id":"fields","line":"18","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"results/Row","name":"Row"}],"name":"Stream"},"isOptional":true,"defaultValue":"null","name":"stream","id":"stream","line":"19","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/List","arguments":[{"refId":"results/Row","name":"Row"}],"name":"List"},"isOptional":true,"defaultValue":"null","name":"rows","id":"rows","line":"20","kind":"param"}],"line":"17","kind":"constructor"}],"line":"5","kind":"class"},{"uri":"file:///home/james/devroot/sqljocky/lib/src/results/results_impl.dart","name":"_OnDone","isPrivate":true,"id":"_OnDone","line":"3","kind":"typedef"},{"superclass":{"refId":"sqljocky/_Handler","name":"_Handler"},"uri":"file:///home/james/devroot/sqljocky/lib/src/query/query_stream_handler.dart","name":"_QueryStreamHandler","isPrivate":true,"id":"_QueryStreamHandler","children":[{"returnType":{"refId":"buffer/Buffer","name":"Buffer"},"name":"createRequest","id":"createRequest0()","line":"21","kind":"method"},{"returnType":{"refId":"sqljocky/_HandlerResponse","name":"_HandlerResponse"},"name":"processResponse","id":"processResponse1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"response","id":"response","kind":"param"}],"line":"28","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_HEADER_PACKET","id":"STATE_HEADER_PACKET","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_FIELD_PACKETS","id":"STATE_FIELD_PACKETS","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_ROW_PACKETS","id":"STATE_ROW_PACKETS","line":"6","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_sql","isPrivate":true,"id":"_sql","line":"7","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_state","isPrivate":true,"id":"_state","line":"8","kind":"variable"},{"ref":{"refId":"sqljocky/_OkPacket","name":"_OkPacket"},"name":"_okPacket","isPrivate":true,"id":"_okPacket","line":"10","kind":"variable"},{"ref":{"refId":"sqljocky/_ResultSetHeaderPacket","name":"_ResultSetHeaderPacket"},"name":"_resultSetHeaderPacket","isPrivate":true,"id":"_resultSetHeaderPacket","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"sqljocky/_FieldImpl","name":"_FieldImpl"}],"name":"List"},"name":"_fieldPackets","isPrivate":true,"id":"_fieldPackets","line":"12","kind":"variable"},{"ref":{"refId":"dart.async/StreamController","arguments":[{"refId":"results/Row","name":"Row"}],"name":"StreamController"},"name":"_streamController","isPrivate":true,"id":"_streamController","line":"14","kind":"variable"},{"name":"_QueryStreamHandler","id":"_QueryStreamHandler1()","children":[{"initializedField":{"refId":"sqljocky/_QueryStreamHandler/_sql","name":"_sql"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_sql","isPrivate":true,"id":"_sql","kind":"param"}],"line":"16","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"results/Row","name":"Row"},"uri":"file:///home/james/devroot/sqljocky/lib/src/query/standard_data_packet.dart","name":"_StandardDataPacket","isPrivate":true,"id":"_StandardDataPacket","children":[{"isOperator":true,"name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"66","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isOperator":true,"name":"[]=","id":"[]=2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"name":"value","id":"value","kind":"param"}],"line":"68","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"length=","id":"length=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"newLength","id":"newLength","kind":"param"}],"line":"72","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"76","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","line":"64","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[],"name":"List"},"isFinal":true,"name":"values","id":"values","line":"4","kind":"variable"},{"name":"_StandardDataPacket","id":"_StandardDataPacket2()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"buffer","id":"buffer","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"sqljocky/_FieldImpl","name":"_FieldImpl"}],"name":"List"},"name":"fieldPackets","id":"fieldPackets","kind":"param"}],"line":"6","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/james/devroot/sqljocky/lib/src/query/result_set_header_packet.dart","name":"_ResultSetHeaderPacket","isPrivate":true,"id":"_ResultSetHeaderPacket","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"18","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"fieldCount","id":"fieldCount","line":"8","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_fieldCount","isPrivate":true,"id":"_fieldCount","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_extra","isPrivate":true,"id":"_extra","line":"5","kind":"variable"},{"ref":{"refId":"logging/Logger","name":"Logger"},"name":"log","id":"log","line":"6","kind":"variable"},{"name":"_ResultSetHeaderPacket","id":"_ResultSetHeaderPacket1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"buffer","id":"buffer","kind":"param"}],"line":"10","kind":"constructor"}],"line":"3","kind":"class"},{"interfaces":[{"refId":"results/Row","name":"Row"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/james/devroot/sqljocky/lib/src/prepared_statements/binary_data_packet.dart","name":"_BinaryDataPacket","isPrivate":true,"id":"_BinaryDataPacket","children":[{"name":"_readField","isPrivate":true,"id":"_readField2()","children":[{"ref":{"refId":"sqljocky/_FieldImpl","name":"_FieldImpl"},"name":"field","id":"field","kind":"param"},{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"buffer","id":"buffer","kind":"param"}],"line":"40","kind":"method"},{"isOperator":true,"name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"205","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isOperator":true,"name":"[]=","id":"[]=2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"name":"value","id":"value","kind":"param"}],"line":"207","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"length=","id":"length=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"newLength","id":"newLength","kind":"param"}],"line":"211","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"215","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","line":"203","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[],"name":"List"},"name":"values","id":"values","line":"4","kind":"variable"},{"ref":{"refId":"logging/Logger","name":"Logger"},"isFinal":true,"name":"log","id":"log","line":"5","kind":"variable"},{"name":"_BinaryDataPacket._forTests","isPrivate":true,"id":"_BinaryDataPacket._forTests0()","line":"7","kind":"constructor"},{"name":"_BinaryDataPacket","id":"_BinaryDataPacket2()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"buffer","id":"buffer","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"sqljocky/_FieldImpl","name":"_FieldImpl"}],"name":"List"},"name":"fields","id":"fields","kind":"param"}],"line":"9","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"sqljocky/_Handler","name":"_Handler"},"uri":"file:///home/james/devroot/sqljocky/lib/src/prepared_statements/execute_query_handler.dart","name":"_ExecuteQueryHandler","isPrivate":true,"id":"_ExecuteQueryHandler","children":[{"returnType":{"refId":"buffer/Buffer","name":"Buffer"},"name":"createRequest","id":"createRequest0()","line":"25","kind":"method"},{"returnType":{"refId":"sqljocky/_HandlerResponse","name":"_HandlerResponse"},"name":"processResponse","id":"processResponse1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"response","id":"response","kind":"param"}],"line":"146","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_HEADER_PACKET","id":"STATE_HEADER_PACKET","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_FIELD_PACKETS","id":"STATE_FIELD_PACKETS","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_ROW_PACKETS","id":"STATE_ROW_PACKETS","line":"6","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_state","isPrivate":true,"id":"_state","line":"8","kind":"variable"},{"ref":{"refId":"sqljocky/_ResultSetHeaderPacket","name":"_ResultSetHeaderPacket"},"name":"_resultSetHeaderPacket","isPrivate":true,"id":"_resultSetHeaderPacket","line":"10","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"sqljocky/_FieldImpl","name":"_FieldImpl"}],"name":"List"},"name":"_fieldPackets","isPrivate":true,"id":"_fieldPackets","line":"11","kind":"variable"},{"ref":{"refId":"dart.async/StreamController","arguments":[{"refId":"results/Row","name":"Row"}],"name":"StreamController"},"name":"_streamController","isPrivate":true,"id":"_streamController","line":"12","kind":"variable"},{"ref":{"refId":"sqljocky/_PreparedQuery","name":"_PreparedQuery"},"isFinal":true,"name":"_preparedQuery","isPrivate":true,"id":"_preparedQuery","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[],"name":"List"},"isFinal":true,"name":"_values","isPrivate":true,"id":"_values","line":"15","kind":"variable"},{"ref":{"refId":"sqljocky/_OkPacket","name":"_OkPacket"},"name":"_okPacket","isPrivate":true,"id":"_okPacket","line":"16","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_executed","isPrivate":true,"id":"_executed","line":"17","kind":"variable"},{"name":"_ExecuteQueryHandler","id":"_ExecuteQueryHandler3()","children":[{"initializedField":{"refId":"sqljocky/_ExecuteQueryHandler/_preparedQuery","name":"_preparedQuery"},"ref":{"refId":"sqljocky/_PreparedQuery","name":"_PreparedQuery"},"name":"_preparedQuery","isPrivate":true,"id":"_preparedQuery","kind":"param"},{"initializedField":{"refId":"sqljocky/_ExecuteQueryHandler/_executed","name":"_executed"},"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_executed","isPrivate":true,"id":"_executed","kind":"param"},{"initializedField":{"refId":"sqljocky/_ExecuteQueryHandler/_values","name":"_values"},"ref":{"refId":"dart.core/List","arguments":[],"name":"List"},"name":"_values","isPrivate":true,"id":"_values","line":"20","kind":"param"}],"line":"19","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"sqljocky/_Handler","name":"_Handler"},"uri":"file:///home/james/devroot/sqljocky/lib/src/prepared_statements/close_statement_handler.dart","name":"_CloseStatementHandler","isPrivate":true,"id":"_CloseStatementHandler","children":[{"returnType":{"refId":"buffer/Buffer","name":"Buffer"},"name":"createRequest","id":"createRequest0()","line":"10","kind":"method"},{"returnType":{"refId":"sqljocky/_HandlerResponse","name":"_HandlerResponse"},"name":"processResponse","id":"processResponse1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"response","id":"response","kind":"param"}],"line":"17","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"_handle","isPrivate":true,"id":"_handle","line":"4","kind":"variable"},{"name":"_CloseStatementHandler","id":"_CloseStatementHandler1()","children":[{"initializedField":{"refId":"sqljocky/_CloseStatementHandler/_handle","name":"_handle"},"ref":{"refId":"dart.core/int","name":"int"},"name":"_handle","isPrivate":true,"id":"_handle","kind":"param"}],"line":"6","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"sqljocky/_Handler","name":"_Handler"},"uri":"file:///home/james/devroot/sqljocky/lib/src/prepared_statements/prepare_handler.dart","name":"_PrepareHandler","isPrivate":true,"id":"_PrepareHandler","children":[{"returnType":{"refId":"buffer/Buffer","name":"Buffer"},"name":"createRequest","id":"createRequest0()","line":"20","kind":"method"},{"returnType":{"refId":"sqljocky/_HandlerResponse","name":"_HandlerResponse"},"name":"processResponse","id":"processResponse1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"response","id":"response","kind":"param"}],"line":"27","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"sql","id":"sql","line":"11","kind":"property"},{"ref":{"refId":"sqljocky/_PrepareOkPacket","name":"_PrepareOkPacket"},"name":"okPacket","id":"okPacket","line":"12","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"sqljocky/_FieldImpl","name":"_FieldImpl"}],"name":"List"},"name":"parameters","id":"parameters","line":"13","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"sqljocky/_FieldImpl","name":"_FieldImpl"}],"name":"List"},"name":"columns","id":"columns","line":"14","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_sql","isPrivate":true,"id":"_sql","line":"4","kind":"variable"},{"ref":{"refId":"sqljocky/_PrepareOkPacket","name":"_PrepareOkPacket"},"name":"_okPacket","isPrivate":true,"id":"_okPacket","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_parametersToRead","isPrivate":true,"id":"_parametersToRead","line":"6","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_columnsToRead","isPrivate":true,"id":"_columnsToRead","line":"7","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"sqljocky/_FieldImpl","name":"_FieldImpl"}],"name":"List"},"name":"_parameters","isPrivate":true,"id":"_parameters","line":"8","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"sqljocky/_FieldImpl","name":"_FieldImpl"}],"name":"List"},"name":"_columns","isPrivate":true,"id":"_columns","line":"9","kind":"variable"},{"name":"_PrepareHandler","id":"_PrepareHandler1()","children":[{"initializedField":{"refId":"sqljocky/_PrepareHandler/_sql","name":"_sql"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_sql","isPrivate":true,"id":"_sql","kind":"param"}],"line":"16","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/james/devroot/sqljocky/lib/src/prepared_statements/prepared_query.dart","name":"_PreparedQuery","isPrivate":true,"id":"_PreparedQuery","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"sql","id":"sql","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"sqljocky/_FieldImpl","name":"_FieldImpl"}],"name":"List"},"isFinal":true,"name":"parameters","id":"parameters","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"sqljocky/_FieldImpl","name":"_FieldImpl"}],"name":"List"},"isFinal":true,"name":"columns","id":"columns","line":"6","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"statementHandlerId","id":"statementHandlerId","line":"7","kind":"variable"},{"name":"cnx","id":"cnx","line":"8","kind":"variable"},{"name":"_PreparedQuery","id":"_PreparedQuery1()","children":[{"ref":{"refId":"sqljocky/_PrepareHandler","name":"_PrepareHandler"},"name":"handler","id":"handler","kind":"param"}],"line":"10","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/james/devroot/sqljocky/lib/src/prepared_statements/prepare_ok_packet.dart","name":"_PrepareOkPacket","isPrivate":true,"id":"_PrepareOkPacket","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"23","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"statementHandlerId","id":"statementHandlerId","line":"9","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"columnCount","id":"columnCount","line":"10","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"parameterCount","id":"parameterCount","line":"11","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"warningCount","id":"warningCount","line":"12","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_statementHandlerId","isPrivate":true,"id":"_statementHandlerId","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_columnCount","isPrivate":true,"id":"_columnCount","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_parameterCount","isPrivate":true,"id":"_parameterCount","line":"6","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_warningCount","isPrivate":true,"id":"_warningCount","line":"7","kind":"variable"},{"name":"_PrepareOkPacket","id":"_PrepareOkPacket1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"buffer","id":"buffer","kind":"param"}],"line":"14","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"sqljocky/_Handler","name":"_Handler"},"uri":"file:///home/james/devroot/sqljocky/lib/src/auth/auth_handler.dart","name":"_AuthHandler","isPrivate":true,"id":"_AuthHandler","children":[{"returnType":{"refId":"buffer/Buffer","name":"Buffer"},"name":"createRequest","id":"createRequest0()","line":"18","kind":"method"},{"returnType":{"refId":"sqljocky/_HandlerResponse","name":"_HandlerResponse"},"name":"processResponse","id":"processResponse1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"response","id":"response","kind":"param"}],"line":"67","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_username","isPrivate":true,"id":"_username","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_password","isPrivate":true,"id":"_password","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_db","isPrivate":true,"id":"_db","line":"6","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isFinal":true,"name":"_scrambleBuffer","isPrivate":true,"id":"_scrambleBuffer","line":"7","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"_clientFlags","isPrivate":true,"id":"_clientFlags","line":"8","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"_maxPacketSize","isPrivate":true,"id":"_maxPacketSize","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"_collation","isPrivate":true,"id":"_collation","line":"10","kind":"variable"},{"name":"_AuthHandler","id":"_AuthHandler7()","children":[{"initializedField":{"refId":"sqljocky/_AuthHandler/_username","name":"_username"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_username","isPrivate":true,"id":"_username","kind":"param"},{"initializedField":{"refId":"sqljocky/_AuthHandler/_password","name":"_password"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_password","isPrivate":true,"id":"_password","kind":"param"},{"initializedField":{"refId":"sqljocky/_AuthHandler/_db","name":"_db"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_db","isPrivate":true,"id":"_db","kind":"param"},{"initializedField":{"refId":"sqljocky/_AuthHandler/_scrambleBuffer","name":"_scrambleBuffer"},"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"_scrambleBuffer","isPrivate":true,"id":"_scrambleBuffer","line":"13","kind":"param"},{"initializedField":{"refId":"sqljocky/_AuthHandler/_clientFlags","name":"_clientFlags"},"ref":{"refId":"dart.core/int","name":"int"},"name":"_clientFlags","isPrivate":true,"id":"_clientFlags","line":"13","kind":"param"},{"initializedField":{"refId":"sqljocky/_AuthHandler/_maxPacketSize","name":"_maxPacketSize"},"ref":{"refId":"dart.core/int","name":"int"},"name":"_maxPacketSize","isPrivate":true,"id":"_maxPacketSize","line":"14","kind":"param"},{"initializedField":{"refId":"sqljocky/_AuthHandler/_collation","name":"_collation"},"ref":{"refId":"dart.core/int","name":"int"},"name":"_collation","isPrivate":true,"id":"_collation","line":"14","kind":"param"}],"line":"12","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"sqljocky/_Handler","name":"_Handler"},"uri":"file:///home/james/devroot/sqljocky/lib/src/auth/handshake_handler.dart","name":"_HandshakeHandler","isPrivate":true,"id":"_HandshakeHandler","children":[{"returnType":{"refId":"buffer/Buffer","name":"Buffer"},"comment":"\nThe server initiates the handshake after the client connects,\nso a request will never be created.\n","name":"createRequest","id":"createRequest0()","line":"25","kind":"method"},{"returnType":{"refId":"sqljocky/_HandlerResponse","name":"_HandlerResponse"},"comment":"\nAfter receiving the handshake packet, if all is well, an [_AuthHandler]\nis created and returned to handle authentication.\n\nCurrently, if the client protocol version is not 4.1, an\nexception is thrown.\n","name":"processResponse","id":"processResponse1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"response","id":"response","kind":"param"}],"line":"36","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_user","isPrivate":true,"id":"_user","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_password","isPrivate":true,"id":"_password","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_db","isPrivate":true,"id":"_db","line":"6","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"protocolVersion","id":"protocolVersion","line":"8","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"serverVersion","id":"serverVersion","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"threadId","id":"threadId","line":"10","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"scrambleBuffer","id":"scrambleBuffer","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"serverCapabilities","id":"serverCapabilities","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"serverLanguage","id":"serverLanguage","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"serverStatus","id":"serverStatus","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"scrambleLength","id":"scrambleLength","line":"15","kind":"variable"},{"name":"_HandshakeHandler","id":"_HandshakeHandler3()","children":[{"initializedField":{"refId":"sqljocky/_HandshakeHandler/_user","name":"_user"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_user","isPrivate":true,"id":"_user","kind":"param"},{"initializedField":{"refId":"sqljocky/_HandshakeHandler/_password","name":"_password"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_password","isPrivate":true,"id":"_password","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"db","id":"db","kind":"param"}],"line":"17","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"sqljocky/_Handler","name":"_Handler"},"uri":"file:///home/james/devroot/sqljocky/lib/src/handlers/quit_handler.dart","name":"_QuitHandler","isPrivate":true,"id":"_QuitHandler","children":[{"returnType":{"refId":"buffer/Buffer","name":"Buffer"},"name":"createRequest","id":"createRequest0()","line":"8","kind":"method"},{"name":"processResponse","id":"processResponse1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"response","id":"response","kind":"param"}],"line":"14","kind":"method"},{"name":"_QuitHandler","id":"_QuitHandler0()","line":"4","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"sqljocky/_Handler","name":"_Handler"},"uri":"file:///home/james/devroot/sqljocky/lib/src/handlers/debug_handler.dart","name":"_DebugHandler","isPrivate":true,"id":"_DebugHandler","children":[{"returnType":{"refId":"buffer/Buffer","name":"Buffer"},"name":"createRequest","id":"createRequest0()","line":"8","kind":"method"},{"returnType":{"refId":"sqljocky/_HandlerResponse","name":"_HandlerResponse"},"name":"processResponse","id":"processResponse1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"response","id":"response","kind":"param"}],"line":"14","kind":"method"},{"name":"_DebugHandler","id":"_DebugHandler0()","line":"4","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"sqljocky/_Handler","name":"_Handler"},"uri":"file:///home/james/devroot/sqljocky/lib/src/handlers/ping_handler.dart","name":"_PingHandler","isPrivate":true,"id":"_PingHandler","children":[{"returnType":{"refId":"buffer/Buffer","name":"Buffer"},"name":"createRequest","id":"createRequest0()","line":"8","kind":"method"},{"returnType":{"refId":"sqljocky/_HandlerResponse","name":"_HandlerResponse"},"name":"processResponse","id":"processResponse1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"response","id":"response","kind":"param"}],"line":"14","kind":"method"},{"name":"_PingHandler","id":"_PingHandler0()","line":"4","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"sqljocky/_Handler","name":"_Handler"},"uri":"file:///home/james/devroot/sqljocky/lib/src/handlers/use_db_handler.dart","name":"_UseDbHandler","isPrivate":true,"id":"_UseDbHandler","children":[{"returnType":{"refId":"buffer/Buffer","name":"Buffer"},"name":"createRequest","id":"createRequest0()","line":"10","kind":"method"},{"returnType":{"refId":"sqljocky/_HandlerResponse","name":"_HandlerResponse"},"name":"processResponse","id":"processResponse1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"response","id":"response","kind":"param"}],"line":"17","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_dbName","isPrivate":true,"id":"_dbName","line":"4","kind":"variable"},{"name":"_UseDbHandler","id":"_UseDbHandler1()","children":[{"initializedField":{"refId":"sqljocky/_UseDbHandler/_dbName","name":"_dbName"},"ref":{"refId":"dart.core/String","name":"String"},"name":"_dbName","isPrivate":true,"id":"_dbName","kind":"param"}],"line":"6","kind":"constructor"}],"line":"3","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nEach command which the mysql protocol implements is handled with a [_Handler] object.\nA handler is created with the appropriate parameters when the command is invoked\nfrom the connection. The transport is then responsible for sending the\nrequest which the handler creates, and then parsing the result returned by \nthe mysql server, either synchronously or asynchronously.\n","uri":"file:///home/james/devroot/sqljocky/lib/src/handlers/handler.dart","name":"_Handler","isPrivate":true,"id":"_Handler","children":[{"returnType":{"refId":"buffer/Buffer","name":"Buffer"},"comment":"\nReturns a [Buffer] containing the command packet.\n","name":"createRequest","id":"createRequest0()","line":"33","kind":"method"},{"returnType":{"refId":"sqljocky/_HandlerResponse","name":"_HandlerResponse"},"comment":"\nParses a [Buffer] containing the response to the command.\nReturns a [_Handler] if that handler should take over and\nprocess subsequent packets from the server, otherwise the\nresult is returned in the [Future], either in one of the\nConnection methods, or Transport.connect() \n","name":"processResponse","id":"processResponse1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"response","id":"response","kind":"param"}],"line":"42","kind":"method"},{"comment":"\nParses the response packet to recognise Ok and Error packets.\nReturns an [_OkPacket] if the packet was an Ok packet, throws\na [MySqlException] if it was an Error packet, or returns [:null:] \nif the packet has not been handled by this method.\n","name":"checkResponse","id":"checkResponse2()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"response","id":"response","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"prepareStmt","id":"prepareStmt","kind":"param"}],"line":"50","kind":"method"},{"ref":{"refId":"logging/Logger","name":"Logger"},"name":"log","id":"log","line":"28","kind":"variable"}],"line":"27","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/james/devroot/sqljocky/lib/src/handlers/handler.dart","name":"_HandlerResponse","isPrivate":true,"id":"_HandlerResponse","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"hasResult","id":"hasResult","line":"13","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"name":"finished","id":"finished","line":"9","kind":"variable"},{"ref":{"refId":"sqljocky/_Handler","name":"_Handler"},"isFinal":true,"name":"nextHandler","id":"nextHandler","line":"10","kind":"variable"},{"isFinal":true,"name":"result","id":"result","line":"11","kind":"variable"},{"ref":{"refId":"sqljocky/_HandlerResponse","name":"_HandlerResponse"},"isFinal":true,"isStatic":true,"name":"notFinished","id":"notFinished","line":"17","kind":"variable"},{"name":"_HandlerResponse","id":"_HandlerResponse3()","children":[{"initializedField":{"refId":"sqljocky/_HandlerResponse/finished","name":"finished"},"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"finished","id":"finished","kind":"param"},{"initializedField":{"refId":"sqljocky/_HandlerResponse/nextHandler","name":"nextHandler"},"isNamed":true,"ref":{"refId":"sqljocky/_Handler","name":"_Handler"},"isOptional":true,"defaultValue":"null","name":"nextHandler","id":"nextHandler","kind":"param"},{"initializedField":{"refId":"sqljocky/_HandlerResponse/result","name":"result"},"isNamed":true,"isOptional":true,"defaultValue":"_NO_RESULT","name":"result","id":"result","kind":"param"}],"line":"15","kind":"constructor"}],"line":"8","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/james/devroot/sqljocky/lib/src/handlers/handler.dart","name":"_NoResult","isPrivate":true,"id":"_NoResult","children":[{"name":"_NoResult","id":"_NoResult0()","line":"4","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/james/devroot/sqljocky/lib/src/handlers/ok_packet.dart","name":"_OkPacket","isPrivate":true,"id":"_OkPacket","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"22","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"affectedRows","id":"affectedRows","line":"9","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"insertId","id":"insertId","line":"10","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"serverStatus","id":"serverStatus","line":"11","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"message","id":"message","line":"12","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_affectedRows","isPrivate":true,"id":"_affectedRows","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_insertId","isPrivate":true,"id":"_insertId","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_serverStatus","isPrivate":true,"id":"_serverStatus","line":"6","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_message","isPrivate":true,"id":"_message","line":"7","kind":"variable"},{"name":"_OkPacket","id":"_OkPacket1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"buffer","id":"buffer","kind":"param"}],"line":"14","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/james/devroot/sqljocky/lib/src/handlers/parameter_packet.dart","name":"_ParameterPacket","isPrivate":true,"id":"_ParameterPacket","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"type","id":"type","line":"10","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"flags","id":"flags","line":"11","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"decimals","id":"decimals","line":"12","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","line":"13","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_type","isPrivate":true,"id":"_type","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_flags","isPrivate":true,"id":"_flags","line":"6","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_decimals","isPrivate":true,"id":"_decimals","line":"7","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_length","isPrivate":true,"id":"_length","line":"8","kind":"variable"},{"name":"_ParameterPacket","id":"_ParameterPacket1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"buffer","id":"buffer","kind":"param"}],"line":"15","kind":"constructor"}],"line":"4","kind":"class"},{"interfaces":[{"refId":"dart.core/Error","name":"Error"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"comment":"\n[MySqlClientError] is thrown when the client is used improperly.\n","uri":"file:///home/james/devroot/sqljocky/lib/src/mysql_client_error.dart","name":"MySqlClientError","id":"MySqlClientError","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"14","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"message","id":"message","line":"7","kind":"variable"},{"comment":"\nCreate a [MySqlClientError]\n","name":"MySqlClientError._","isPrivate":true,"id":"MySqlClientError._1()","children":[{"initializedField":{"refId":"sqljocky/MySqlClientError/message","name":"message"},"ref":{"refId":"dart.core/String","name":"String"},"name":"message","id":"message","kind":"param"}],"line":"12","kind":"constructor"}],"line":"6","kind":"class"},{"interfaces":[{"refId":"dart.core/Error","name":"Error"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"comment":"\n[MySqlProtocolError] is thrown when something unexpected is read from the the MySQL protocol.\n","uri":"file:///home/james/devroot/sqljocky/lib/src/mysql_protocol_error.dart","name":"MySqlProtocolError","id":"MySqlProtocolError","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"14","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"message","id":"message","line":"7","kind":"variable"},{"comment":"\nCreate a [MySqlProtocolError]\n","name":"MySqlProtocolError._","isPrivate":true,"id":"MySqlProtocolError._1()","children":[{"initializedField":{"refId":"sqljocky/MySqlProtocolError/message","name":"message"},"ref":{"refId":"dart.core/String","name":"String"},"name":"message","id":"message","kind":"param"}],"line":"12","kind":"constructor"}],"line":"6","kind":"class"},{"interfaces":[{"refId":"dart.core/Exception","name":"Exception"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"uri":"file:///home/james/devroot/sqljocky/lib/src/mysql_exception.dart","name":"MySqlException","id":"MySqlException","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"23","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"errorNumber","id":"errorNumber","line":"8","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"sqlState","id":"sqlState","line":"9","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"message","id":"message","line":"10","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_errorNumber","isPrivate":true,"id":"_errorNumber","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_sqlState","isPrivate":true,"id":"_sqlState","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_message","isPrivate":true,"id":"_message","line":"6","kind":"variable"},{"comment":"\nCreate a [MySqlException] based on an error response from the mysql server\n","name":"MySqlException._","isPrivate":true,"id":"MySqlException._1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"buffer","id":"buffer","kind":"param"}],"line":"15","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"sqljocky/Object__ConnectionHelpers","name":"Object__ConnectionHelpers"},"comment":"\nQuery is created by ConnectionPool.prepare(sql) and Transaction.prepare(sql). It holds\na prepared query. Set parameters on it using the square bracket operators.\n","uri":"file:///home/james/devroot/sqljocky/lib/src/query.dart","name":"Query","id":"Query","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"sqljocky/_Connection","name":"_Connection"}],"name":"Future"},"name":"_getConnection","isPrivate":true,"id":"_getConnection0()","line":"26","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"sqljocky/_PreparedQuery","name":"_PreparedQuery"}],"name":"Future"},"name":"_prepare","isPrivate":true,"id":"_prepare0()","line":"35","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if there was already a cached query which has been used.\n","name":"_useCachedQuery","isPrivate":true,"id":"_useCachedQuery2()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"},{"ref":{"refId":"dart.async/Completer","name":"Completer"},"name":"c","id":"c","kind":"param"}],"line":"52","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_prepareAndCacheQuery","isPrivate":true,"id":"_prepareAndCacheQuery2()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"},{"ref":{"refId":"dart.async/Completer","name":"Completer"},"name":"c","id":"c","kind":"param"}],"line":"64","kind":"method"},{"name":"_setUpValues","isPrivate":true,"id":"_setUpValues1()","children":[{"ref":{"refId":"sqljocky/_PreparedQuery","name":"_PreparedQuery"},"name":"preparedQuery","id":"preparedQuery","kind":"param"}],"line":"81","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"close","id":"close0()","line":"87","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"results/Results","name":"Results"}],"name":"Future"},"comment":"\nExecutes the query, returning a future [Results] object.\n","name":"execute","id":"execute0()","line":"95","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"results/Results","name":"Results"}],"name":"Future"},"name":"_execute","isPrivate":true,"id":"_execute1()","children":[{"ref":{"refId":"sqljocky/_PreparedQuery","name":"_PreparedQuery"},"name":"preparedQuery","id":"preparedQuery","kind":"param"}],"line":"116","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"results/Results","name":"Results"}],"name":"List"}],"name":"Future"},"comment":"\nExecutes the query once for each set of [parameters], and returns a future list\nof results, one for each set of parameters, that completes when the query has been executed.\n\nThe [Results] in the list contain their rows in the [Results.rows] field, rather than in the\n[Results.stream] field.\n","name":"executeMulti","id":"executeMulti1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[],"name":"List"}],"name":"List"},"name":"parameters","id":"parameters","kind":"param"}],"line":"138","kind":"method"},{"isOperator":true,"comment":"\nGet a current parameter value.\n","name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"pos","id":"pos","kind":"param"}],"line":"183","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isOperator":true,"comment":"\nSet a parameter value.\n","name":"[]=","id":"[]=2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"name":"value","id":"value","kind":"param"}],"line":"188","kind":"method"},{"name":"_releaseConnection","isPrivate":true,"id":"_releaseConnection1()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"193","kind":"method"},{"comment":"\nAttempt to reuse a connection for a queued operation\n","name":"_reuseConnection","isPrivate":true,"id":"_reuseConnection1()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"202","kind":"method"},{"ref":{"refId":"sqljocky/ConnectionPool","name":"ConnectionPool"},"isFinal":true,"name":"_pool","isPrivate":true,"id":"_pool","line":"8","kind":"variable"},{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"isFinal":true,"name":"_cnx","isPrivate":true,"id":"_cnx","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"sql","id":"sql","line":"10","kind":"variable"},{"ref":{"refId":"logging/Logger","name":"Logger"},"isFinal":true,"name":"log","id":"log","line":"11","kind":"variable"},{"isFinal":true,"name":"_inTransaction","isPrivate":true,"id":"_inTransaction","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[],"name":"List"},"name":"_values","isPrivate":true,"id":"_values","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_executed","isPrivate":true,"id":"_executed","line":"14","kind":"variable"},{"name":"Query._internal","isPrivate":true,"id":"Query._internal2()","children":[{"initializedField":{"refId":"sqljocky/Query/_pool","name":"_pool"},"ref":{"refId":"sqljocky/ConnectionPool","name":"ConnectionPool"},"name":"_pool","isPrivate":true,"id":"_pool","kind":"param"},{"initializedField":{"refId":"sqljocky/Query/sql","name":"sql"},"ref":{"refId":"dart.core/String","name":"String"},"name":"sql","id":"sql","kind":"param"}],"line":"16","kind":"constructor"},{"name":"Query._forTransaction","isPrivate":true,"id":"Query._forTransaction3()","children":[{"initializedField":{"refId":"sqljocky/Query/_pool","name":"_pool"},"ref":{"refId":"sqljocky/ConnectionPool","name":"ConnectionPool"},"name":"_pool","isPrivate":true,"id":"_pool","kind":"param"},{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"},{"initializedField":{"refId":"sqljocky/Query/sql","name":"sql"},"ref":{"refId":"dart.core/String","name":"String"},"name":"sql","id":"sql","kind":"param"}],"line":"21","kind":"constructor"}],"line":"7","kind":"class"},{"superclass":{"refId":"sqljocky/ConnectionPool","name":"ConnectionPool"},"uri":"file:///home/james/devroot/sqljocky/lib/src/transaction.dart","name":"_TransactionPool","isPrivate":true,"id":"_TransactionPool","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"sqljocky/_Connection","name":"_Connection"}],"name":"Future"},"name":"_getConnection","isPrivate":true,"id":"_getConnection0()","line":"110","kind":"method"},{"name":"_releaseConnection","isPrivate":true,"id":"_releaseConnection1()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"116","kind":"method"},{"name":"_reuseConnection","isPrivate":true,"id":"_reuseConnection1()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"119","kind":"method"},{"name":"_removeConnection","isPrivate":true,"id":"_removeConnection1()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"122","kind":"method"},{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"isFinal":true,"name":"cnx","id":"cnx","line":"106","kind":"variable"},{"name":"_TransactionPool","id":"_TransactionPool1()","children":[{"initializedField":{"refId":"sqljocky/_TransactionPool/cnx","name":"cnx"},"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"108","kind":"constructor"}],"line":"105","kind":"class"},{"superclass":{"refId":"sqljocky/Object__ConnectionHelpers","name":"Object__ConnectionHelpers"},"comment":"\nStart a transaction by using [ConnectionPool.startTransaction]. Once a transaction\nis started it retains its connection until the transaction is committed or rolled\nback. You must use the [commit] and [rollback] methods to do this, otherwise\nthe connection will not be released back to the pool.\n","uri":"file:///home/james/devroot/sqljocky/lib/src/transaction.dart","name":"Transaction","id":"Transaction","children":[{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nCommits the transaction and released the connection. An error will be thrown\nif any queries are executed after calling commit.\n","name":"commit","id":"commit0()","line":"22","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nRolls back the transaction and released the connection. An error will be thrown\nif any queries are executed after calling rollback.\n","name":"rollback","id":"rollback0()","line":"39","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"results/Results","name":"Results"}],"name":"Future"},"name":"query","id":"query1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"sql","id":"sql","kind":"param"}],"line":"52","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"sqljocky/Query","name":"Query"}],"name":"Future"},"name":"prepare","id":"prepare1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"sql","id":"sql","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"results/Results","name":"Results"}],"name":"Future"},"name":"prepareExecute","id":"prepareExecute2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"sql","id":"sql","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[],"name":"List"},"name":"parameters","id":"parameters","kind":"param"}],"line":"71","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_checkFinished","isPrivate":true,"id":"_checkFinished0()","line":"86","kind":"method"},{"name":"_releaseConnection","isPrivate":true,"id":"_releaseConnection1()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"92","kind":"method"},{"name":"_reuseConnection","isPrivate":true,"id":"_reuseConnection1()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"96","kind":"method"},{"name":"_removeConnection","isPrivate":true,"id":"_removeConnection1()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"100","kind":"method"},{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"_cnx","isPrivate":true,"id":"_cnx","line":"10","kind":"variable"},{"ref":{"refId":"sqljocky/ConnectionPool","name":"ConnectionPool"},"name":"_pool","isPrivate":true,"id":"_pool","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_finished","isPrivate":true,"id":"_finished","line":"12","kind":"variable"},{"name":"Transaction._internal","isPrivate":true,"id":"Transaction._internal2()","children":[{"initializedField":{"refId":"sqljocky/Transaction/_cnx","name":"_cnx"},"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"_cnx","isPrivate":true,"id":"_cnx","kind":"param"},{"initializedField":{"refId":"sqljocky/Transaction/_pool","name":"_pool"},"ref":{"refId":"sqljocky/ConnectionPool","name":"ConnectionPool"},"name":"_pool","isPrivate":true,"id":"_pool","kind":"param"}],"line":"16","kind":"constructor"}],"line":"9","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/james/devroot/sqljocky/lib/src/connection.dart","name":"_Connection","isPrivate":true,"id":"_Connection","children":[{"returnType":{"refId":"void","name":"void"},"name":"close","id":"close0()","line":"38","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"use","id":"use0()","line":"44","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"release","id":"release0()","line":"49","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nConnects to the given [host] on [port], authenticates using [user]\nand [password] and connects to [db]. Returns a future which completes\nwhen this has happened. The future's value is an OkPacket if the connection\nis succesful.\n","name":"connect","id":"connect5()","children":[{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"host","id":"host","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"port","id":"port","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"user","id":"user","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"password","id":"password","line":"61","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"db","id":"db","line":"61","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_readPacket","isPrivate":true,"id":"_readPacket0()","line":"88","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_handleHeader","isPrivate":true,"id":"_handleHeader1()","children":[{"name":"buffer","id":"buffer","kind":"param"}],"line":"96","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_handleData","isPrivate":true,"id":"_handleData1()","children":[{"name":"buffer","id":"buffer","kind":"param"}],"line":"105","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendBuffer","isPrivate":true,"id":"_sendBuffer1()","children":[{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"buffer","id":"buffer","kind":"param"}],"line":"134","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[],"name":"Future"},"comment":"\nProcesses a handler, from sending the initial request to handling any packets returned from\nmysql (unless [noResponse] is true).\n\nReturns a future\n","name":"processHandler","id":"processHandler2()","children":[{"ref":{"refId":"sqljocky/_Handler","name":"_Handler"},"name":"handler","id":"handler","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"noResponse","id":"noResponse","kind":"param"}],"line":"153","kind":"method"},{"returnType":{"refId":"sqljocky/_PreparedQuery","name":"_PreparedQuery"},"name":"removePreparedQueryFromCache","id":"removePreparedQueryFromCache1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"sql","id":"sql","kind":"param"}],"line":"166","kind":"method"},{"returnType":{"refId":"sqljocky/_PreparedQuery","name":"_PreparedQuery"},"name":"getPreparedQueryFromCache","id":"getPreparedQueryFromCache1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"sql","id":"sql","kind":"param"}],"line":"175","kind":"method"},{"name":"putPreparedQueryInCache","id":"putPreparedQueryInCache2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"sql","id":"sql","kind":"param"},{"ref":{"refId":"sqljocky/_PreparedQuery","name":"_PreparedQuery"},"name":"preparedQuery","id":"preparedQuery","kind":"param"}],"line":"179","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"inUse","id":"inUse","line":"42","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"HEADER_SIZE","id":"HEADER_SIZE","line":"4","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_PACKET_HEADER","id":"STATE_PACKET_HEADER","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATE_PACKET_DATA","id":"STATE_PACKET_DATA","line":"6","kind":"variable"},{"ref":{"refId":"logging/Logger","name":"Logger"},"isFinal":true,"name":"log","id":"log","line":"7","kind":"variable"},{"ref":{"refId":"logging/Logger","name":"Logger"},"isFinal":true,"name":"lifecycleLog","id":"lifecycleLog","line":"8","kind":"variable"},{"ref":{"refId":"sqljocky/ConnectionPool","name":"ConnectionPool"},"name":"_pool","isPrivate":true,"id":"_pool","line":"10","kind":"variable"},{"ref":{"refId":"sqljocky/_Handler","name":"_Handler"},"name":"_handler","isPrivate":true,"id":"_handler","line":"11","kind":"variable"},{"ref":{"refId":"dart.async/Completer","arguments":[],"name":"Completer"},"name":"_completer","isPrivate":true,"id":"_completer","line":"12","kind":"variable"},{"ref":{"refId":"buffered_socket/BufferedSocket","name":"BufferedSocket"},"name":"_socket","isPrivate":true,"id":"_socket","line":"14","kind":"variable"},{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"isFinal":true,"name":"_headerBuffer","isPrivate":true,"id":"_headerBuffer","line":"16","kind":"variable"},{"ref":{"refId":"buffer/Buffer","name":"Buffer"},"name":"_dataBuffer","isPrivate":true,"id":"_dataBuffer","line":"17","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_readyForHeader","isPrivate":true,"id":"_readyForHeader","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_packetNumber","isPrivate":true,"id":"_packetNumber","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_dataSize","isPrivate":true,"id":"_dataSize","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_user","isPrivate":true,"id":"_user","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_password","isPrivate":true,"id":"_password","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"number","id":"number","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_inUse","isPrivate":true,"id":"_inUse","line":"28","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"sqljocky/_PreparedQuery","name":"_PreparedQuery"}],"name":"Map"},"isFinal":true,"name":"_preparedQueryCache","isPrivate":true,"id":"_preparedQueryCache","line":"29","kind":"variable"},{"name":"_Connection","id":"_Connection2()","children":[{"initializedField":{"refId":"sqljocky/_Connection/_pool","name":"_pool"},"ref":{"refId":"sqljocky/ConnectionPool","name":"ConnectionPool"},"name":"_pool","isPrivate":true,"id":"_pool","kind":"param"},{"initializedField":{"refId":"sqljocky/_Connection/number","name":"number"},"ref":{"refId":"dart.core/int","name":"int"},"name":"number","id":"number","kind":"param"}],"line":"31","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///home/james/devroot/sqljocky/lib/src/connection_pool.dart","name":"_ConnectionHelpers","isPrivate":true,"id":"_ConnectionHelpers","children":[{"name":"_releaseReuseComplete","isPrivate":true,"id":"_releaseReuseComplete3()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"},{"ref":{"refId":"dart.async/Completer","name":"Completer"},"name":"c","id":"c","kind":"param"},{"name":"result","id":"result","kind":"param"}],"line":"346","kind":"method"},{"name":"_releaseReuseCompleteError","isPrivate":true,"id":"_releaseReuseCompleteError3()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"},{"ref":{"refId":"dart.async/Completer","name":"Completer"},"name":"c","id":"c","kind":"param"},{"name":"e","id":"e","kind":"param"}],"line":"352","kind":"method"}],"line":"345","kind":"class"},{"superclass":{"refId":"sqljocky/Object__ConnectionHelpers","name":"Object__ConnectionHelpers"},"comment":"\nMaintains a pool of database connections. When queries are executed, if there is\na free connection it will be used, otherwise the query is queued until a connection is\nfree. \n","uri":"file:///home/james/devroot/sqljocky/lib/src/connection_pool.dart","name":"ConnectionPool","id":"ConnectionPool","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"sqljocky/_Connection","name":"_Connection"}],"name":"Future"},"name":"_getConnection","isPrivate":true,"id":"_getConnection0()","line":"44","kind":"method"},{"name":"_createConnection","isPrivate":true,"id":"_createConnection1()","children":[{"ref":{"refId":"dart.async/Completer","name":"Completer"},"name":"c","id":"c","kind":"param"}],"line":"66","kind":"method"},{"name":"_removeConnection","isPrivate":true,"id":"_removeConnection1()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"85","kind":"method"},{"name":"_releaseConnection","isPrivate":true,"id":"_releaseConnection1()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"89","kind":"method"},{"comment":"\nAttempts to continue using a connection. If the connection isn't managed\nby this pool, or if the connection is already in use, nothing happens.\n\nIf there are operations which have been queued in this pool, starts\nto execute that operation. \n\nOtherwise, nothing happens.\n\n//TODO rename to something like processQueuedOperations??\n","name":"_reuseConnection","isPrivate":true,"id":"_reuseConnection1()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"105","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCloses all open connections. \n\nWARNING: this will probably break things.\n","name":"close","id":"close0()","line":"147","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"results/Results","name":"Results"}],"name":"Future"},"comment":"\nExecutes the [sql] query as soon as a connection is available, returning\na [Future<Results>] that completes when the results start to become available.\n","name":"query","id":"query1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"sql","id":"sql","kind":"param"}],"line":"157","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nPings the server. Returns a [Future] that completes when the server replies.\n","name":"ping","id":"ping0()","line":"187","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nSends a debug message to the server. Returns a [Future] that completes\nwhen the server replies.\n","name":"debug","id":"debug0()","line":"206","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_closeQuery","isPrivate":true,"id":"_closeQuery2()","children":[{"ref":{"refId":"sqljocky/Query","name":"Query"},"name":"q","id":"q","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"retain","id":"retain","kind":"param"}],"line":"224","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"sqljocky/_Connection","name":"_Connection"}],"name":"Future"},"comment":"\nThe future returned by [_waitUntilReady] fires when all queued operations in the pool\nhave completed, and the connection is free to be used again.\n","name":"_waitUntilReady","isPrivate":true,"id":"_waitUntilReady1()","children":[{"ref":{"refId":"sqljocky/_Connection","name":"_Connection"},"name":"cnx","id":"cnx","kind":"param"}],"line":"254","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"sqljocky/Query","name":"Query"}],"name":"Future"},"comment":"\nPrepares a query with the given [sql]. Returns a [Future<Query>] that\ncompletes when the query has been prepared.\n","name":"prepare","id":"prepare1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"sql","id":"sql","kind":"param"}],"line":"269","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"sqljocky/Transaction","name":"Transaction"}],"name":"Future"},"comment":"\nStarts a transaction. Returns a [Future<Transaction>] that completes\nwhen the transaction has been started. If [consistent] is true, the\ntransaction is started with consistent snapshot. A transaction holds\nonto its connection until closed (committed or rolled back). You\nmust use this method rather than query('start transaction') otherwise\nsubsequent queries may get executed on other connections which are not\nin the transaction. Likewise, you must use the [Transaction.commit]\nand [Transaction.rollback] methods to commit and roll back, otherwise\nthe connection will not be released.\n","name":"startTransaction","id":"startTransaction1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"consistent","id":"consistent","kind":"param"}],"line":"291","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"results/Results","name":"Results"}],"name":"Future"},"comment":"\nPrepares and executes the [sql] with the given list of [parameters].\nReturns a [Future<Results>] that completes when the query has been\nexecuted.\n","name":"prepareExecute","id":"prepareExecute2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"sql","id":"sql","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[],"name":"List"},"name":"parameters","id":"parameters","kind":"param"}],"line":"321","kind":"method"},{"ref":{"refId":"logging/Logger","name":"Logger"},"isFinal":true,"name":"log","id":"log","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_host","isPrivate":true,"id":"_host","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"_port","isPrivate":true,"id":"_port","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_user","isPrivate":true,"id":"_user","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_password","isPrivate":true,"id":"_password","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"_db","isPrivate":true,"id":"_db","line":"15","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_max","isPrivate":true,"id":"_max","line":"17","kind":"variable"},{"ref":{"refId":"dart.collection/Queue","arguments":[{"refId":"dart.async/Completer","arguments":[{"refId":"sqljocky/_Connection","name":"_Connection"}],"name":"Completer"}],"name":"Queue"},"isFinal":true,"name":"_pendingConnections","isPrivate":true,"id":"_pendingConnections","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"sqljocky/_Connection","name":"_Connection"}],"name":"List"},"isFinal":true,"name":"_pool","isPrivate":true,"id":"_pool","line":"25","kind":"variable"},{"comment":"\nCreates a [ConnectionPool]. When connections are required they will connect to the\n[db] on the given [host] and [port], using the [user] and [password]. The [max] number\nof simultaneous connections can also be specified.\n","name":"ConnectionPool","id":"ConnectionPool6()","children":[{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'localhost'","name":"host","id":"host","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"3306","name":"port","id":"port","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"user","id":"user","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"password","id":"password","line":"33","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"db","id":"db","line":"33","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"5","name":"max","id":"max","line":"33","kind":"param"}],"line":"32","kind":"constructor"}],"line":"8","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nHolds blob data, and can be created or accessed as either a [String] or a [List] of ints.\n","uri":"file:///home/james/devroot/sqljocky/lib/src/blob.dart","name":"Blob","id":"Blob","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns the value of the blob as a [String].\n","name":"toString","id":"toString0()","line":"28","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"comment":"\nReturns the value of the blob as a list of bytes.\n","name":"toBytes","id":"toBytes0()","line":"38","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"56","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"hashCode","id":"hashCode","line":"45","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_string","isPrivate":true,"id":"_string","line":"7","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"_bytes","isPrivate":true,"id":"_bytes","line":"8","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_hashcode","isPrivate":true,"id":"_hashcode","line":"9","kind":"variable"},{"comment":"\nCreate a [Blob] from a [string].\n","name":"Blob.fromString","id":"Blob.fromString1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"string","id":"string","kind":"param"}],"line":"14","kind":"constructor"},{"comment":"\nCreate a [Blob] from a list of [bytes].\n","name":"Blob.fromBytes","id":"Blob.fromBytes1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"bytes","id":"bytes","kind":"param"}],"line":"21","kind":"constructor"}],"line":"6","kind":"class"}],"line":"1","kind":"library"}